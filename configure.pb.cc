// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: configure.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "configure.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* addr_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  addr_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* addr_map_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  addr_map_reflection_ = NULL;
const ::google::protobuf::Descriptor* configure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  configure_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_configure_2eproto() {
  protobuf_AddDesc_configure_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "configure.proto");
  GOOGLE_CHECK(file != NULL);
  addr_info_descriptor_ = file->message_type(0);
  static const int addr_info_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(addr_info, addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(addr_info, port_),
  };
  addr_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      addr_info_descriptor_,
      addr_info::default_instance_,
      addr_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(addr_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(addr_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(addr_info));
  addr_map_descriptor_ = file->message_type(1);
  static const int addr_map_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(addr_map, locals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(addr_map, remotes_),
  };
  addr_map_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      addr_map_descriptor_,
      addr_map::default_instance_,
      addr_map_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(addr_map, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(addr_map, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(addr_map));
  configure_descriptor_ = file->message_type(2);
  static const int configure_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(configure, maps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(configure, run_as_daemon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(configure, server_crash_run_),
  };
  configure_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      configure_descriptor_,
      configure::default_instance_,
      configure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(configure, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(configure, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(configure));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_configure_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    addr_info_descriptor_, &addr_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    addr_map_descriptor_, &addr_map::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    configure_descriptor_, &configure::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_configure_2eproto() {
  delete addr_info::default_instance_;
  delete addr_info_reflection_;
  delete addr_map::default_instance_;
  delete addr_map_reflection_;
  delete configure::default_instance_;
  delete configure_reflection_;
}

void protobuf_AddDesc_configure_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017configure.proto\"(\n\taddr_info\022\014\n\004addr\030d"
    " \002(\t\022\r\n\004port\030\310\001 \002(\r\"D\n\010addr_map\022\032\n\006local"
    "s\030d \003(\0132\n.addr_info\022\034\n\007remotes\030\310\001 \003(\0132\n."
    "addr_info\"W\n\tconfigure\022\027\n\004maps\030d \003(\0132\t.a"
    "ddr_map\022\026\n\rrun_as_daemon\030\310\001 \002(\r\022\031\n\020serve"
    "r_crash_run\030\300\002 \001(\t", 218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "configure.proto", &protobuf_RegisterTypes);
  addr_info::default_instance_ = new addr_info();
  addr_map::default_instance_ = new addr_map();
  configure::default_instance_ = new configure();
  addr_info::default_instance_->InitAsDefaultInstance();
  addr_map::default_instance_->InitAsDefaultInstance();
  configure::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_configure_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_configure_2eproto {
  StaticDescriptorInitializer_configure_2eproto() {
    protobuf_AddDesc_configure_2eproto();
  }
} static_descriptor_initializer_configure_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int addr_info::kAddrFieldNumber;
const int addr_info::kPortFieldNumber;
#endif  // !_MSC_VER

addr_info::addr_info()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:addr_info)
}

void addr_info::InitAsDefaultInstance() {
}

addr_info::addr_info(const addr_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:addr_info)
}

void addr_info::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

addr_info::~addr_info() {
  // @@protoc_insertion_point(destructor:addr_info)
  SharedDtor();
}

void addr_info::SharedDtor() {
  if (addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete addr_;
  }
  if (this != default_instance_) {
  }
}

void addr_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* addr_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return addr_info_descriptor_;
}

const addr_info& addr_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configure_2eproto();
  return *default_instance_;
}

addr_info* addr_info::default_instance_ = NULL;

addr_info* addr_info::New() const {
  return new addr_info;
}

void addr_info::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_addr()) {
      if (addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        addr_->clear();
      }
    }
    port_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool addr_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:addr_info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string addr = 100;
      case 100: {
        if (tag == 802) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1600)) goto parse_port;
        break;
      }

      // required uint32 port = 200;
      case 200: {
        if (tag == 1600) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:addr_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:addr_info)
  return false;
#undef DO_
}

void addr_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:addr_info)
  // required string addr = 100;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->addr(), output);
  }

  // required uint32 port = 200;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(200, this->port(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:addr_info)
}

::google::protobuf::uint8* addr_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:addr_info)
  // required string addr = 100;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->addr(), target);
  }

  // required uint32 port = 200;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(200, this->port(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:addr_info)
  return target;
}

int addr_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string addr = 100;
    if (has_addr()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addr());
    }

    // required uint32 port = 200;
    if (has_port()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void addr_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const addr_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const addr_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void addr_info::MergeFrom(const addr_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_addr()) {
      set_addr(from.addr());
    }
    if (from.has_port()) {
      set_port(from.port());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void addr_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addr_info::CopyFrom(const addr_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addr_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void addr_info::Swap(addr_info* other) {
  if (other != this) {
    std::swap(addr_, other->addr_);
    std::swap(port_, other->port_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata addr_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = addr_info_descriptor_;
  metadata.reflection = addr_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int addr_map::kLocalsFieldNumber;
const int addr_map::kRemotesFieldNumber;
#endif  // !_MSC_VER

addr_map::addr_map()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:addr_map)
}

void addr_map::InitAsDefaultInstance() {
}

addr_map::addr_map(const addr_map& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:addr_map)
}

void addr_map::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

addr_map::~addr_map() {
  // @@protoc_insertion_point(destructor:addr_map)
  SharedDtor();
}

void addr_map::SharedDtor() {
  if (this != default_instance_) {
  }
}

void addr_map::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* addr_map::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return addr_map_descriptor_;
}

const addr_map& addr_map::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configure_2eproto();
  return *default_instance_;
}

addr_map* addr_map::default_instance_ = NULL;

addr_map* addr_map::New() const {
  return new addr_map;
}

void addr_map::Clear() {
  locals_.Clear();
  remotes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool addr_map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:addr_map)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .addr_info locals = 100;
      case 100: {
        if (tag == 802) {
         parse_locals:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_locals()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_locals;
        if (input->ExpectTag(1602)) goto parse_remotes;
        break;
      }

      // repeated .addr_info remotes = 200;
      case 200: {
        if (tag == 1602) {
         parse_remotes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_remotes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1602)) goto parse_remotes;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:addr_map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:addr_map)
  return false;
#undef DO_
}

void addr_map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:addr_map)
  // repeated .addr_info locals = 100;
  for (int i = 0; i < this->locals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->locals(i), output);
  }

  // repeated .addr_info remotes = 200;
  for (int i = 0; i < this->remotes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, this->remotes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:addr_map)
}

::google::protobuf::uint8* addr_map::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:addr_map)
  // repeated .addr_info locals = 100;
  for (int i = 0; i < this->locals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->locals(i), target);
  }

  // repeated .addr_info remotes = 200;
  for (int i = 0; i < this->remotes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        200, this->remotes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:addr_map)
  return target;
}

int addr_map::ByteSize() const {
  int total_size = 0;

  // repeated .addr_info locals = 100;
  total_size += 2 * this->locals_size();
  for (int i = 0; i < this->locals_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locals(i));
  }

  // repeated .addr_info remotes = 200;
  total_size += 2 * this->remotes_size();
  for (int i = 0; i < this->remotes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->remotes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void addr_map::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const addr_map* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const addr_map*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void addr_map::MergeFrom(const addr_map& from) {
  GOOGLE_CHECK_NE(&from, this);
  locals_.MergeFrom(from.locals_);
  remotes_.MergeFrom(from.remotes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void addr_map::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addr_map::CopyFrom(const addr_map& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addr_map::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->locals())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->remotes())) return false;
  return true;
}

void addr_map::Swap(addr_map* other) {
  if (other != this) {
    locals_.Swap(&other->locals_);
    remotes_.Swap(&other->remotes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata addr_map::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = addr_map_descriptor_;
  metadata.reflection = addr_map_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int configure::kMapsFieldNumber;
const int configure::kRunAsDaemonFieldNumber;
const int configure::kServerCrashRunFieldNumber;
#endif  // !_MSC_VER

configure::configure()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:configure)
}

void configure::InitAsDefaultInstance() {
}

configure::configure(const configure& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:configure)
}

void configure::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  run_as_daemon_ = 0u;
  server_crash_run_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

configure::~configure() {
  // @@protoc_insertion_point(destructor:configure)
  SharedDtor();
}

void configure::SharedDtor() {
  if (server_crash_run_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete server_crash_run_;
  }
  if (this != default_instance_) {
  }
}

void configure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* configure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return configure_descriptor_;
}

const configure& configure::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_configure_2eproto();
  return *default_instance_;
}

configure* configure::default_instance_ = NULL;

configure* configure::New() const {
  return new configure;
}

void configure::Clear() {
  if (_has_bits_[0 / 32] & 6) {
    run_as_daemon_ = 0u;
    if (has_server_crash_run()) {
      if (server_crash_run_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        server_crash_run_->clear();
      }
    }
  }
  maps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool configure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:configure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .addr_map maps = 100;
      case 100: {
        if (tag == 802) {
         parse_maps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_maps;
        if (input->ExpectTag(1600)) goto parse_run_as_daemon;
        break;
      }

      // required uint32 run_as_daemon = 200;
      case 200: {
        if (tag == 1600) {
         parse_run_as_daemon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_as_daemon_)));
          set_has_run_as_daemon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(2562)) goto parse_server_crash_run;
        break;
      }

      // optional string server_crash_run = 320;
      case 320: {
        if (tag == 2562) {
         parse_server_crash_run:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_crash_run()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_crash_run().data(), this->server_crash_run().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "server_crash_run");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:configure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:configure)
  return false;
#undef DO_
}

void configure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:configure)
  // repeated .addr_map maps = 100;
  for (int i = 0; i < this->maps_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->maps(i), output);
  }

  // required uint32 run_as_daemon = 200;
  if (has_run_as_daemon()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(200, this->run_as_daemon(), output);
  }

  // optional string server_crash_run = 320;
  if (has_server_crash_run()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_crash_run().data(), this->server_crash_run().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "server_crash_run");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      320, this->server_crash_run(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:configure)
}

::google::protobuf::uint8* configure::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:configure)
  // repeated .addr_map maps = 100;
  for (int i = 0; i < this->maps_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->maps(i), target);
  }

  // required uint32 run_as_daemon = 200;
  if (has_run_as_daemon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(200, this->run_as_daemon(), target);
  }

  // optional string server_crash_run = 320;
  if (has_server_crash_run()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_crash_run().data(), this->server_crash_run().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "server_crash_run");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        320, this->server_crash_run(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:configure)
  return target;
}

int configure::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 run_as_daemon = 200;
    if (has_run_as_daemon()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->run_as_daemon());
    }

    // optional string server_crash_run = 320;
    if (has_server_crash_run()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_crash_run());
    }

  }
  // repeated .addr_map maps = 100;
  total_size += 2 * this->maps_size();
  for (int i = 0; i < this->maps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maps(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void configure::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const configure* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const configure*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void configure::MergeFrom(const configure& from) {
  GOOGLE_CHECK_NE(&from, this);
  maps_.MergeFrom(from.maps_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_run_as_daemon()) {
      set_run_as_daemon(from.run_as_daemon());
    }
    if (from.has_server_crash_run()) {
      set_server_crash_run(from.server_crash_run());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void configure::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void configure::CopyFrom(const configure& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool configure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->maps())) return false;
  return true;
}

void configure::Swap(configure* other) {
  if (other != this) {
    maps_.Swap(&other->maps_);
    std::swap(run_as_daemon_, other->run_as_daemon_);
    std::swap(server_crash_run_, other->server_crash_run_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata configure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = configure_descriptor_;
  metadata.reflection = configure_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
